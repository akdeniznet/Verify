# Bu araç @keyiflerolsun tarafından | @KekikAkademi için yazılmıştır.
name: CloudStream Derleyici

# Aynı anda birden fazla workflow çalışırsa eskisini iptal et
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

# Workflow'u tetikleyecek olaylar
on:
  workflow_dispatch: # Manuel çalıştırılabilir
  push: # Master branch’e push olunca otomatik çalışır
    branches:
      - master
    paths-ignore: # Bu dosya tipleri değişirse workflow tetiklenmesin
      - "**/*.md"
      - "**/*.yml"
      - "**/*.jpg"
      - "**/*.png"
      - "**/*.py"

permissions:
  contents: write # Git push için gerekli yetki

jobs:
  CloudStreamDerleyici:
    runs-on: ubuntu-latest # Ubuntu sanal makinede çalışır
    steps:
      # 1. Kaynak kod deposunu (master branch) çek
      - name: "'src' Depo Kontrolü"
        uses: actions/checkout@v4.2.2
        with:
          path: "src"

      # 2. Build branch'i çek (çıktıları buraya koyacağız)
      - name: "'build' Branch Kontrolü"
        uses: actions/checkout@v4.2.2
        with:
          ref: "build"
          path: "builds"

      # 3. JDK 17 ayarla (Gradle için gerekli)
      - name: JDK 17 Ayarla
        uses: actions/setup-java@v4.6.0
        with:
          distribution: adopt
          java-version: 17

      # 4. Android SDK ayarla
      - name: Android SDK Ayarla
        uses: android-actions/setup-android@v3.2.2

      # 5. Gradle ile projeyi derle
      - name: Eklentileri Derle
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x ./gradlew          # Gradle scriptine çalıştırma izni ver
          ./gradlew make makePluginsJson  # .cs3 ve plugins.json üret

      # 6. Eski build klasörünü tamamen sil, yenisini oluştur
      - name: Build Klasörünü Temizle ve Yeniden Oluştur
        run: |
          cd $GITHUB_WORKSPACE/builds
          rm -rf builds               # Eski build klasörünü komple sil
          mkdir builds                # Sıfırdan yeni klasör oluştur

          # Yeni derlenen dosyaları kopyala
          cp $GITHUB_WORKSPACE/src/**/build/*.cs3 builds/ || true
          cp $GITHUB_WORKSPACE/src/build/plugins.json builds/ || true

      # 7. Yeni dosyaları build branch’e commit & push et
      - name: Derlemeleri Build Branch’e Gönder (Force Push)
        env:
          AKDENIZ: ${{ secrets.AKDENIZ }} # Repo secrets'ta kişisel token
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          # Git init değilse başlat
          if [ ! -d .git ]; then
            git init
            git remote add origin https://github.com/${{ github.repository }}.git
          fi

          # build branch varsa checkout et, yoksa oluştur
          if git ls-remote --exit-code --heads origin build; then
            git fetch origin build
            git checkout build
          else
            git checkout -b build
          fi

          # Yeni build dosyalarını ekle ve commit et
          git add -f builds
          git commit -m "[$GITHUB_SHA] CloudStream Build Güncellemesi" || echo "No changes to commit"

          # Force push (her zaman tek güncel build klasörü kalsın diye)
          git push -f https://x-access-token:${AKDENIZ}@github.com/${{ github.repository }} build
